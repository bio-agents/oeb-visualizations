{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>OEB Visualizations is a collection of Vue components for data visualization in OpenEBench. </p>"},{"location":"#installation","title":"Installation","text":"<p>To install the package run: </p> <pre><code>npm install @inb/oeb-visualizations\n</code></pre>"},{"location":"components/accessibilityPlot/","title":"accessibilityPlot","text":""},{"location":"components/accessibilityPlot/#data","title":"Data","text":"<p>Data is provided to the component as an array of objects through the <code>dataItems</code> prop. Each object represents an access to the server. The object must have the following keys: <code>access_time</code>, <code>date</code> and <code>code</code>.  - <code>access_time</code>: time it took to access the server in ms. -  <code>date</code>: date of the access. Should not be null. - <code>code</code>: HTTP code returned by the server. If <code>null</code> the bar will be colored with the color specified in the <code>colorNA</code> prop. If the code is an error code the bar will be colored with the color specified in the <code>colorOffline</code> prop. If the code is 200 the bar will be colored with the color specified in the <code>colorOnline</code> prop. </p> <p>Example:</p> <pre><code>[\n    {\n        \"date\": \"2022-10-23T07:54:06.716122Z\",\n        \"code\": 200,\n        \"access_time\": 51\n    },\n    {\n        \"date\": \"2022-10-24T07:58:50.609475Z\",\n        \"code\": 200,\n        \"access_time\": 67\n    },\n    {\n        \"date\": \"2022-10-25T07:51:53.841140Z\",\n        \"code\": 200,\n        \"access_time\": 55\n    }\n]\n</code></pre>"},{"location":"components/accessibilityPlot/#props","title":"Props","text":"Name Type Description Default Required dataItems Array Array of objects  with keys <code>access_time</code>, <code>date</code> and <code>code</code>.  More details in \"Data\" section true height Number Height of the plot in pixels. 400 false colorNA String Color of bars for which there is no monitoring information (<code>code</code>=<code>null</code>). RGB format: <code>\"&lt;R&gt;, &lt;G&gt;, &lt;B&gt;\"</code> 204, 204, 204 false colorOffline String Color of bars for which the server was offline (<code>code</code> is an error code). RGB format: <code>\"&lt;R&gt;, &lt;G&gt;, &lt;B&gt;\"</code> 255, 153, 145 false colorOnline String Color of bars for which the server was online (<code>code</code> is 200). RGB format: <code>\"&lt;R&gt;, &lt;G&gt;, &lt;B&gt;\"</code> 111, 176, 129 false yaxisTitle String Title of the y axis. Access time (ms) false xaxisTitle String Title of the x axis. Date false dtick String Tick interval for the x axis in unix epoch. 86400000 false"},{"location":"components/accessibilityPlot/#usage","title":"Usage","text":"<p>Import the <code>accessibilityPlot</code> in your Vue component and add it to the <code>components</code> section. Then use the component in the template.</p> <pre><code>&lt;template&gt;\n    &lt;div&gt;\n        &lt;accessibilityPlot :dataItems=\"data\" /&gt;\n    &lt;/div&gt;\n&lt;/template&gt; \n\n&lt;script&gt;\nimport { accessibilityPlot } from '@inb/oeb_visualizations'\n\nexport default {\n  components: {\n    accessibilityPlot\n  },\n  data(){\n    return {\n      data: [\n        {\n          \"date\": \"2022-10-23T07:54:06.716122Z\",\n          \"code\": 200,\n          \"access_time\": 51\n        },\n        {\n          \"date\": \"2022-10-24T07:58:50.609475Z\",\n          \"code\": 200,\n          \"access_time\": 67\n        },\n        {\n          \"date\": \"2022-10-25T07:51:53.841140Z\",\n          \"code\": 200,\n          \"access_time\": 55\n        }\n      ]\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"components/citationsPlot/","title":"citationsPlot","text":""},{"location":"components/citationsPlot/#data","title":"Data","text":"<p>Data is provided to the component as an array of objects through the <code>dataTraces</code> prop. Each object corresponds to a publication and will be represented as a trace in the resulting plot. They have the following keys: <code>data</code>, <code>id</code>, <code>label</code>, <code>title</code>, <code>year</code> and <code>url</code>. - <code>data</code>:  array of objects. Each object has the following keys: <code>count</code> and <code>year</code>. <code>count</code> is the number of citations of the publication in the year <code>year</code>. Exmple <pre><code>[\n  {\n    \"count\": 1,\n    \"year\": 2019\n  },\n  {\n    \"count\": 1,\n    \"year\": 2020\n  },\n  {\n    \"count\": 1,\n    \"year\": 2021\n  }\n]\n</code></pre></p> <ul> <li><code>id</code>: string. Identifier of the publication.</li> <li><code>label</code>: string. Label of the publication.</li> <li><code>title</code>: string. Title of the publication.</li> <li><code>year</code>: number. Year of the publication.</li> <li><code>url</code>: string. URL of the publication.</li> </ul>"},{"location":"components/citationsPlot/#props","title":"Props","text":"Name Type Description Default Required dataTraces Array Array of objects  with keys <code>data</code>, <code>id</code>, <code>label</code>, <code>title</code>, <code>year</code> and <code>url</code>.  More details in \"Data\" section true stack Boolean If true, the traces will be stacked. false false colors Array Array of colors for the traces. HEX format false height Number Height of the plot in pixels. 400 false showlegend Boolean If true, the legend will be shown. true false title String Title of the plot. false xaxisTitle String Title of the x axis. Year false yaxisTitle String Title of the y axis. Number of citations false dark Boolean If true, the plot will be displayed in dark mode. false false"},{"location":"components/citationsPlot/#usage","title":"Usage","text":"<p>Import the <code>citationsPlot</code> in your Vue component and add it to the <code>components</code> section. Then use the component in the template.</p> <pre><code>&lt;template&gt;\n    &lt;div&gt;\n        &lt;citationsPlot :dataTraces=\"data\" /&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport citationsPlotPage from '../components/citationsPlotPage.vue'\n\nexport default {\n  name: 'IndexPage',\n  components: {\n    citationsPlotPage\n  },\n  data(){\n    return {\n      data: [\n        {\n          \"data\": [\n            {\n              \"count\": 1,\n              \"year\": 2019\n            },\n            {\n              \"count\": 1,\n              \"year\": 2020\n            },\n            {\n              \"count\": 1,\n              \"year\": 2021\n            }\n          ],\n          \"id\": \"paper1\",\n          \"label\": \"OEB paper\",\n          \"title\": \"OpenEBench: a web platform for transparent and reproducible biomedical benchmarking\",\n          \"year\": 2020,\n          \"url\": \"\"\n        },\n        {\n          \"data\": [\n            {\n              \"count\": 1,\n              \"year\": 2019\n            },\n            {\n              \"count\": 1,\n              \"year\": 2020\n            },\n            {\n              \"count\": 1,\n              \"year\": 2021\n            }\n          ],\n          \"id\": \"paper2\",\n          \"label\": \"OEB paper 2\",\n          \"title\": \"OpenEBench 2: an update of the web platform for transparent and reproducible biomedical benchmarking\",\n          \"year\": 2020,\n          \"url\": \"\"\n        }\n      ]\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre>"}]}